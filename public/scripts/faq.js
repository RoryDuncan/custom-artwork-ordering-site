// Generated by CoffeeScript 1.8.0
var clearSearch, data, debounce, debouncedFilter, faqlist, filter, i, noop, qa, search, stopSearching, _fn, _i, _ref,
  __slice = [].slice;

console.log("bingo bango");

search = document.getElementById("search");

faqlist = document.querySelector("ul.faq");

data = [];

qa = faqlist.querySelectorAll("li");

console.log("datums:", qa.length);

_fn = function(i) {
  var answer, question;
  question = qa[i].children[0];
  answer = qa[i].children[1];
  data.push(question.textContent);
  return data.push(answer.textContent);
};
for (i = _i = 0, _ref = qa.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {
  _fn(i);
}

noop = function() {};

debounce = function(fn, debounceTime, context) {
  var lastCalled, tailing;
  if (fn == null) {
    fn = noop;
  }
  if (debounceTime == null) {
    debounceTime = 0;
  }
  if (context == null) {
    context = null;
  }
  lastCalled = Date.now();
  tailing = null;
  return function() {
    var args, now;
    args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
    now = Date.now();
    if (now - lastCalled < debounceTime) {
      if (tailing !== null) {
        window.clearTimeout(tailing);
      }
      tailing = setTimeout(function() {
        return fn.apply(context, args);
      }, debounceTime + 1);
    } else {
      fn.apply(context, args);
    }
    return lastCalled = now;
  };
};

stopSearching = function() {
  faqlist.classList.remove("searching");
  return clearSearch();
};

clearSearch = function() {
  var el, _j, _len, _results;
  _results = [];
  for (i = _j = 0, _len = qa.length; _j < _len; i = ++_j) {
    el = qa[i];
    _results.push(el.classList.remove("result"));
  }
  return _results;
};

filter = function(e) {
  var results, v, _results;
  clearSearch();
  if (this.value.length < 2) {
    stopSearching();
    return;
  }
  faqlist.classList.add("searching");
  console.log(this.value);
  results = fuzzy.filter(this.value, data);
  if (results.length === 0) {
    return;
  }
  _results = [];
  for (i in results) {
    v = results[i];
    _results.push((function(i, v) {
      var index;
      console.log(i);
      index = v.index % 2 === 0 ? v.index / 2 : (v.index - 1) / 2;
      console.log(index, "of", qa.length, "->", qa[index]);
      return qa[index].classList.add("result");
    })(i, v));
  }
  return _results;
};

debouncedFilter = debounce(filter, 200, search);

document.ready.push(function() {
  return search.addEventListener("keyup", debouncedFilter);
});
